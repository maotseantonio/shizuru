
(deflisten appsjson :initial '{"apps": []}' "scripts/apps.py")
(defvar apps_rev false)
(defvar winheight "0px")

(defwindow applauncher
	:geometry (geometry :anchor "center")
	:stacking "fg"
	:exclusive "false"
	:monitor 0
	:focusable "true"
	(eventbox :onhoverlost "${eww} open applauncher --toggle && ${eww} update apps_rev=false && ${eww} update winheight=0px &"
		(box :class "winoutside"
			(box :class "appbox" :style "min-height: ${winheight};"
				(applauncher)
			)
		)
	)
)

(defwidget applauncher []
	(box :orientation "v" :space-evenly "false"
		(box :class "inputbox" :space-evenly "false" :spacing 30
			(label :style "margin-top: 7px;" :class "search" :text "")
			(input :style "margin-top: 7px;"
				:onchange "${eww} update apps_rev=true && scripts/apps.py --query \"{}\" &"
				:onaccept "${eww} update winheight=0px && ${arraylength(appsjson.apps) > 0 ?
				'(${appsjson.apps[0].desktop}) & scripts/apps.py --increase \"' + appsjson.apps[0].desktop + '\" &' : ''}
				${eww} update apps_rev=false &&
				${eww} open applauncher --toggle &"
			)
		)
		(scroll :class "applist" :vexpand true :vscroll true :hscroll false
			(revealer :reveal apps_rev :transition "slidedown" :duration "150ms"
				(box :space-evenly "false" :orientation "v"
					(for a in {appsjson.apps}
						(app :a a)
					)
				)
			)
		)
	)
)

(defwidget app [a]
	(eventbox :cursor "pointer"
		(button :class "buttonapp"
			:onclick "(${a.desktop}) & scripts/apps.py --increase '${a.desktop}' & ${eww} open applauncher --toggle & ${eww} update apps_rev=false & ${eww} update winheight=0px &"
			(box :orientation "h" :space-evenly "false" :spacing 20
				(image :visible {a.icon != "null"} :image-height 32 :path {a.icon != "null" ? a.icon : ""})
				(scroll :hexpand true :hscroll true :vscroll false
					(label :xalign 0 :markup {a.name})
				)
			)
		)
	)
)


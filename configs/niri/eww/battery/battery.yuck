
(defwidget battery []
	(box :orientation "v" :class "winoutside"
		(box :class "winbattery" :style "padding: 20px" :orientation "v"
			(box :orientation "v" :valign "start" :space-evenly "false"
				(box :orientation "h"
					(box :orientation "h" :space-evenly "false" :spacing 10 :halign "start"
						(box :orientation "h" :space-evenly "false" :spacing 10
							(label :text "${BATTERYICON}" :class "qlabel")
							(label :text "Battery" :class "qlabel")
						)
					)
					(box :orientation "h" :halign "end" :spacing 10
						(label :class "text" :text {BATTERYSTATE == "charging" ? "Plugged in" : "${BATTERYTE}"})
					)
				)
				(box :orientation "h" :class "div")
				(box :orientation "v" :space-evenly "false" :valign "center" :class "batteryinfobox" :spacing 7
					(box :orientation "h"  (label :xalign 0 :class "text" :text "Status") (label :xalign 1 :class "text" :text "${BATTERYSTATE}"))
					(box :class "divinfo")
					(box :orientation "h"  (label :xalign 0 :class "text" :text "Capacity") (label :xalign 1 :class "text" :text "${BATTERYCAPACITY}"))
					(box :class "divinfo")
					(box :orientation "h"  (label :xalign 0 :class "text" :text "Charge Cycles") (label :xalign 1 :class "text" :text "${BATTERYCC}"))
					(box :class "divinfo")
					(box :orientation "h" (label :xalign 0 :class "text" :text "Temperature") (label :xalign 1 :class "text" :text "${BATTERYTEMP}"))
					(box :class "divinfo")
					(box :orientation "h" (label :xalign 0 :class "text" :text "Voltage") (label :xalign 1 :class "text" :text "${BATTERYVOLTAGE}"))
					(box :class "divinfo")
					(box :orientation "h" (label :xalign 0 :class "text" :text "Warnings") (label :xalign 1 :class "text" :text "${BATTERYWL}"))
				)
			)
		)
	)
)

(defwidget battery_event []
	(eventbox :onhoverlost "${eww} open battery --toggle &" (battery))
)

(defwindow battery
	:stacking "fg"
	:monitor 0
	:geometry (geometry :x 1470 :y -25)
	(battery_event)
)

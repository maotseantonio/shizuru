#!/usr/bin/env bash
# ██╗   ██╗██████╗ ██████╗  █████╗ ████████╗███████╗███████╗
# ██║   ██║██╔══██╗██╔══██╗██╔══██╗╚══██╔══╝██╔════╝██╔════╝
# ██║   ██║██████╔╝██║  ██║███████║   ██║   █████╗  ███████╗
# ██║   ██║██╔═══╝ ██║  ██║██╔══██║   ██║   ██╔══╝  ╚════██║
#   █████╔╝██║     ██████╔╝██║  ██║   ██║   ███████╗███████║
#   ═════╝ ╚═╝     ╚═════╝ ╚═╝  ╚═╝   ╚═╝   ╚══════╝╚══════╝

#!/bin/bash

count_lines() {
    [[ -n "$1" ]] && wc -l <<< "$1" || echo 0
}

fetch_updates() {
    regular_updates=$(checkupdates 2>/dev/null || true)
    aur_updates=$(paru -Qua 2>/dev/null || true)
}

while true; do
    case "$1" in
        --get-updates)
            fetch_updates
            echo $(( $(count_lines "$regular_updates") + $(count_lines "$aur_updates") ))
            ;;

        --print-updates)
            fetch_updates
            total=$(( $(count_lines "$regular_updates") + $(count_lines "$aur_updates") ))

            if (( total > 0 )); then
                echo "Update me $total updates available:"
                [[ -n "$regular_updates" ]] && { echo -e "\nOfficial updates:"; sed 's/->//g' <<< "$regular_updates"; }
                [[ -n "$aur_updates" ]] && { echo -e "\nAUR updates:"; sed 's/->//g' <<< "$aur_updates"; }
            else
                echo "          ¡Checking for updates!"
            fi
            exit 0
            ;;

        --update-system)
            paru -Syu --nocombinedupgrade
            ;;

        --help|*)
            echo -e "Updates [options]\n\nOptions:
  \033[1m--get-updates\033[0m\t\tGet the number of updates available.
  \033[1m--print-updates\033[0m\tList packages with pending updates
  \033[1m--update-system\033[0m\tInstall all updates (Regular + AUR)\n"
            ;;
    esac
    sleep 3600  # Espera una hora antes de volver a ejecutar
done

